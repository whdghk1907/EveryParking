<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.everyparking.admin.api.costManage.dao.CostManageDao">
	

	<sql id="costManageSql">
		SELECT 
			COST_SEQ
			,pp.PARK_SEQ
			,COST_NAME
			,COST_CONT
			,COST_PRICE
			,DATE_FORMAT(COST_DATE, '%Y-%m-%d') AS COST_DATE
			,PARK_NAME
			,pc.REG_SEQ
			,pc.REG_DATE
			,pc.MOD_SEQ
			,pc.MOD_DATE
			,pc.NOTE
			,pc.USE_YN
		FROM p_costmanage as pc
		join p_parkinginfo as pp
		on pc.PARK_SEQ = pp.PARK_SEQ 
		where 1=1
		AND pc.USE_YN = 'Y'
	</sql>
	<sql id="costSearch">
		<if test='SEARCHCOND != null and !SEARCHCOND.equals("전체")'>
			AND pc.PARK_SEQ = #{SEARCHCOND}
		</if>
		<if test='SEARCHKEY != null and !SEARCHKEY.equals("")'>
			AND <![CDATA[ pc.COST_DATE >= STR_TO_DATE(substr(#{SEARCHKEY}, 1, 10), '%Y-%m-%d')
            AND pc.COST_DATE <= STR_TO_DATE(CONCAT(substr(#{SEARCHKEY}, 14, 24), ' 23:59:59'), '%Y-%m-%d %H:%i:%s') ]]>
		</if>
	</sql>


	<select id="selectListCost" parameterType="hashMap" resultType="hashMap">
		<include refid="costManageSql"></include>
		<include refid="costSearch"></include>
		<if test='PAGING_YN!=null and PAGING_YN.equals("Y")'>
		<if test='ORDER != null and !ORDER.equals("")'>
			ORDER BY ${ORDER} ${ORDER_TYPE}
			</if>
			LIMIT #{START}, #{CNT}
		</if>
	</select>

	<!-- <select id="selectListCostM" parameterType="hashMap" resultType="hashMap">
		/* profitCostMapper.selectListProfitCost [ 수익 조회 목록 - 김장문 ] */
		<include refid="costManageSql"></include>
		<include refid="costSearch"></include>
		<if test='PAGING_YN!=null and PAGING_YN.equals("Y")'>
			<if test='ORDER != null and !ORDER.equals("")'>
				ORDER BY ${ORDER} ${ORDER_TYPE}
			</if>
			LIMIT #{START}, #{CNT}
		</if>
	</select>-->

	<select id="selectListCountCost" parameterType="hashMap" resultType="int">
		/* profitCostMapper.selectListCountProfitCost [ 수익 목록카운트 조회 - 김장문 ] */
		SELECT COUNT(*) FROM(
		<include refid="costManageSql"></include>
		<include refid="costSearch"></include>
		)z
	</select>

	<select id="selectOneCost" parameterType="hashMap" resultType="hashMap">
		/* profitCostMapper.selectOneCost [ 수익 조회 - 정자운 ] */
		<include refid="costManageSql"></include>
	 	AND COST_SEQ = #{COST_SEQ}
	</select>
	
	<update id="insertCost" parameterType="hashMap">
        /* profitCostMapper.insertCost [ 수익 수정 - 정자운 ]  */
        INSERT INTO p_costmanage (
        	PARK_SEQ    
			, COST_NAME 
			, COST_CONT 
			, COST_PRICE
			, COST_DATE 
			, REG_SEQ 
			, REG_DATE
		) VALUES (
			#{ PARK_SEQ   }    
			, #{ COST_NAME  }   
			, #{ COST_CONT  }   
			, #{ COST_PRICE }   
			, #{ COST_DATE  }   
			, #{ REG_SEQ }
			, NOW()
		)
    </update>
	
	
	<update id="updateCost" parameterType="hashMap">
        /* profitCostMapper.updateCost [ 수익 수정 - 정자운 ]  */
        UPDATE p_costmanage SET
			PARK_SEQ   = #{ PARK_SEQ   }
			, COST_NAME  = #{ COST_NAME  }
			, COST_CONT  = #{ COST_CONT  }
			, COST_PRICE = #{ COST_PRICE }
			, COST_DATE  = #{ COST_DATE  }
			, MOD_SEQ = #{ MOD_SEQ }
			, MOD_DATE = NOW()
        WHERE COST_SEQ = #{ COST_SEQ }
    </update>

	<update id="deleteCost" parameterType="hashMap">
        /* profitCostMapper.deleteCost [ 수익 비용 삭제 - 김장문 ]  */
        UPDATE p_costmanage SET
           USE_YN = 'N'
           , MOD_SEQ = #{MOD_SEQ}
           , MOD_DATE = NOW()
        WHERE COST_SEQ = #{COST_SEQ}
    </update>


	<update id="deleteCostRese" parameterType="hashMap">
        /* profitCostMapper.deleteProfitCostRese [ 예약 비용 삭제 - 김장문 ]  */
        UPDATE p_reservation SET
           USE_YN = 'N'
           , MOD_SEQ = #{MOD_SEQ}
           , MOD_DATE = NOW()
        WHERE RESE_SEQ = #{RESE_SEQ}
    </update>


</mapper>

